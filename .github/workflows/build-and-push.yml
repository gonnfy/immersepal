name: Build, Push, and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: adept-bridge-457703-u9
  GAR_LOCATION: asia-northeast1
  SERVICE_NAME: anki-ai
  REPOSITORY_NAME: anki-ai-repo

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    outputs:
      image_tag: ${{ steps.build-and-push.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "anki-ai-github-actions@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        id: build-and-push
        run: SHORT_SHA="sha-$(echo $GITHUB_SHA | cut -c1-8)"
          IMAGE_URL="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE_NAME }}"

          docker build --platform linux/amd64 \
          --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
          -t "${IMAGE_URL}:${SHORT_SHA}" \
          -t "${IMAGE_URL}:latest" \
          .

          docker push --all-tags "${IMAGE_URL}"

          echo "tag=${SHORT_SHA}" >> $GITHUB_OUTPUT

  deploy-to-cloud-run:
    name: Deploy to Cloud Run
    needs: build-and-push-image
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "anki-ai-github-actions@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -var="image_tag=${{ needs.build-and-push-image.outputs.image_tag }}"
